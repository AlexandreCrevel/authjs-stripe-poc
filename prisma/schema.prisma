datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  STANDARD_USER
  PREMIUM_USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(STANDARD_USER)
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation un-à-un avec Subscription
  subscription Subscription? @relation("UserSubscription")
}

model Subscription {
  id                   String    @id @default(cuid())
  stripeSubscriptionId String?   @unique
  status               String?
  currentPeriodEnd     DateTime?
  startDate            DateTime?
  cancelAtPeriodEnd    Boolean?  @default(false)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @default(now())

  // Clé étrangère unique vers User
  userId String @unique
  user   User   @relation("UserSubscription", fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
